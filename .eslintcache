[{"C:\\Users\\arvin\\React projects\\todo_app\\src\\App.js":"1","C:\\Users\\arvin\\React projects\\todo_app\\src\\index.js":"2","C:\\Users\\arvin\\React projects\\todo_app\\src\\reportWebVitals.js":"3","C:\\Users\\arvin\\React projects\\todo_app\\src\\Todo.js":"4","C:\\Users\\arvin\\React projects\\todo_app\\src\\firebase.js":"5"},{"size":1264,"mtime":1611307781386,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1611149268360,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611149268360,"results":"9","hashOfConfig":"7"},{"size":2298,"mtime":1611307787177,"results":"10","hashOfConfig":"7"},{"size":487,"mtime":1611303727734,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1asy35u",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\arvin\\React projects\\todo_app\\src\\App.js",[],"C:\\Users\\arvin\\React projects\\todo_app\\src\\index.js",[],"C:\\Users\\arvin\\React projects\\todo_app\\src\\reportWebVitals.js",[],"C:\\Users\\arvin\\React projects\\todo_app\\src\\Todo.js",["23"],"import React, { useState } from 'react'\r\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Modal, Button } from '@material-ui/core'\r\nimport './Todo.css'\r\nimport db from './firebase';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nfunction Todo(props) {\r\n    const classses = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState('');\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const updateTodo = () => {\r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input\r\n        }, {merge: true});\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n            <Modal\r\n                open={open}\r\n                onClose={e => setOpen(false)}>\r\n                    <form>\r\n                        <div className = {classses.paper}>\r\n                            <h1>Update</h1>\r\n                            <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)}/>\r\n                            <Button onClick={updateTodo} variant=\"contained\" color=\"primary\">Update Todo</Button>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n            <List className = 'todo__list'>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                        <ListItemText primary={props.todo.todo} secondary='Todo' />\r\n                </ListItem>\r\n                <Button onClick={e => setOpen(true)} variant=\"contained\" color=\"primary\">Edit</Button>\r\n                <DeleteForeverIcon \r\n                onClick={event => db.collection('todos').doc(props.todo.id).delete()} variant=\"contained\" color=\"secondary\"/>\r\n            </List> \r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","C:\\Users\\arvin\\React projects\\todo_app\\src\\firebase.js",[],{"ruleId":"24","severity":1,"message":"25","line":23,"column":11,"nodeType":"26","messageId":"27","endLine":23,"endColumn":21},"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar"]